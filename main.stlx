/* MetaEthical.AI
   ==============
   Read the Introduction at:
	 https://medium.com/@june_ku/formal-metaethics-and-metasemantics-for-ai-alignment-2e72533cad6d

   Developed by June Ku in the set theoretic programming language setlX v2.2.0
	 and interspersed with considerable non-technical philosophical commentary.
     https://randoom.org/Software/SetlX/ 
     https://download.randoom.org/setlX/pc/archive/setlX_v2-2-0.binary_only.zip
			 - contains among other things, tutorial.pdf introduction and reference

   I am very grateful to Howard Nye for our work together on metaethics as well 
   as many helpful comments and conversations during much of this development.
	 I also appreciate helpful discussions with Mahendra Prasad, Jessica Taylor, 
	 Anna Salamon and Nate Soares.
*/
load('lib.stlx');
load('causal_model.stlx');
load('causal_markov_model.stlx');
load('decision_algorithm.stlx');

/* MetaEthical.AI Utility Function
	 ===============================
	 Takes a causal markov model of the world w and set of brains bs in w and 
   returns a metaethical.ai utility function. 

   Abstract: We construct a fully technical ethical goal function for AI by 
	 directly tackling the philosophical problems of metaethics and mental 
	 content. To simplify our reduction of these philosophical challenges into 
   "merely" engineering ones, we suppose that unlimited computation and a 
	 complete low-level causal model of the world and the adult human brains in 
	 it are available.

   Given such a model, the AI attributes beliefs and values to a brain in two 
   stages. First, it identifies the syntax of a brain’s mental content by 
   selecting a decision algorithm which is i) isomorphic to the brain’s causal 
   processes and ii) best compresses its behavior while iii) maximizing charity.
	 The semantics of that content then consists first in sense data that 
	 primitively refer to their own occurrence and then in logical and causal 
	 structural combinations of such content.

   The resulting decision algorithm can capture how we decide what to *do*, but 
   it can also identify the ethical factors that we seek to determine when we 
   decide what to *value* or even how to *decide*. Unfolding the implications 
   of those factors, we arrive at what we should do. All together, this allows 
   us to imbue the AI with the necessary concepts to determine and do what we 
   should want it to do.  
*/
metaethical_ai_u := procedure(w, bs) {
	/* Given a set of brain models, associate them with the decision algorithms
     they implement.  */
	d := { [b, decision_algorithm.implemented_by(b, {})] : b in bs };
	/* Then map each brain to its rational self's values (understood extensionally
		 i.e. cashing out the meaning of their mental concepts in terms of the 
		 world events they refer to).  */
	ext_rufs := { [b, d[b].ext_ruf(w,b)] : b in bs };	

	state_space := w.cm().poss_states();
  b := first(bs);
  probs := b.r[first(b.p)];
	// Possible social choice utility functions
	psc_us := choices({ {[state, r_i] : r_i in [1..#state_space] } 
											: state in state_space });
	sc_u := sort_set(psc_us, procedure(psc_u1, psc_u2) { 
										return meai_psc_dist(psc_u1, ext_rufs, state_space, probs) <
													 meai_psc_dist(psc_u2, ext_rufs, state_space, probs); 
								   })[1];
	return sc_u;
};

	meai_psc_dist := procedure(psc_u, ext_rufs, state_space, probs) { 
		return +/ { ord_u_dist(card_u_to_ord_u(ext_ruf, state_space, probs), 
                           card_u_to_ord_u(psc_u,   state_space, probs) ) ** 2 
								: ext_ruf in ext_rufs };
	};

/* MIT License
   -----------
	 Copyright 2019 June Ku 

	 Permission is hereby granted, free of charge, to any person obtaining a copy 
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights 
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
	 copies of the Software, and to permit persons to whom the Software is 
	 furnished to do so, subject to the following conditions:

	 The above copyright notice and this permission notice shall be included in 
	 all copies or substantial portions of the Software.

	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
	 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
	 IN THE SOFTWARE.
*/
